def get_value_or_none(key, dictionary):
    return dictionary[key] if key in dictionary else None


def assert_warning_expr(expr_object, assertion, error_message):
    name_obj = ": \"" + expr_object.name + "\"" if hasattr(expr_object, "name") \
        else ""
    error_message += " for ExpressiveObject" + name_obj
    expr_object.logger.assert_warning(assertion, error_message)


def check_assign(expr_object, attr_name, input_dict, key_name=None):
    """ check dict for some keys, and assign them to the current object if
        they are present
    """
    if key_name is None:
        key_name = attr_name
    assert_warning_expr(expr_object, key_name in input_dict,
                        "No " + key_name + " specified")
    setattr(expr_object, attr_name, input_dict[key_name])